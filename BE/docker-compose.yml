
version: '3.8'

services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coffee_shop_api_1
    
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    ports:
      - "8001:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_PORT=8000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=Jerry
      - DB_PASSWORD=123456
      - DB_NAME=COM6102
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - SECRET_KEY=your-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - DEBUG=false
      - ENVIRONMENT=production
    networks:
      - coffee_shop_network
    expose: 
      - "8000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # 延长启动等待时间确保依赖服务就绪

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coffee_shop_api_2
    
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    ports:
      - "8002:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_PORT=8000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=Jerry
      - DB_PASSWORD=123456
      - DB_NAME=COM6102
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - SECRET_KEY=your-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - DEBUG=false
      - ENVIRONMENT=production
    networks:
      - coffee_shop_network
    expose:
      - "8000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # 延长启动等待时间确保依赖服务就绪
  
  app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coffee_shop_api_3
    
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    ports:
      - "8003:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_PORT=8000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=Jerry
      - DB_PASSWORD=123456
      - DB_NAME=COM6102
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - SECRET_KEY=your-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - DEBUG=false
      - ENVIRONMENT=production
    networks:
      - coffee_shop_network
    expose:
      - "8000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # 延长启动等待时间确保依赖服务就绪
      
  mysql:
    image: mysql:8.0
    container_name: coffee_shop_mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=COM6102
      - MYSQL_USER=Jerry
      - MYSQL_PASSWORD=123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - coffee_shop_network
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --binlog-format=ROW
      - --log-bin=mysql-bin
      - --binlog-row-image=FULL
      - --gtid-mode=ON
      - --enforce-gtid-consistency=ON
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p123456", "--silent"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 60s

  redis:
    image: redis:6.2-alpine
    container_name: coffee_shop_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - coffee_shop_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

  nginx:
    image: nginx:alpine
    container_name: coffee_shop_nginx
    ports:
      - "8000:80"
      - "443:443"  # 如需 HTTPS
    volumes:
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf # 主配置（可选）
      - ./nginx/conf.d:/etc/nginx/conf.d # 关键配置目录
      # - ./ssl:/etc/nginx/ssl  # SSL证书目录（可选）
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - coffee_shop_network

  seatunnel:
    image: apache/seatunnel:latest
    container_name: coffee_shop_seatunnel
    volumes:
      - ./seatunnel/config:/seatunnel/config
    #   # - ./seatunnel/logs:/seatunnel/logs
    networks:
      - coffee_shop_network
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    command: 
      - "./bin/seatunnel.sh"
      - "-m"
      - "local"
      - "-c"
      - "/seatunnel/config/mysql-to-redis.conf"


networks:
  coffee_shop_network:
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: coffee_shop_net

volumes:
  mysql_data:
  redis_data:
  prometheus_data: